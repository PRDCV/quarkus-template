plugins {
    id 'java'
    id 'io.quarkus'
    id 'io.freefair.lombok' version '8.6'
    id 'checkstyle'
    id "org.sonarqube" version "6.2.0.5505"
    id 'jacoco'
}

repositories {
    mavenCentral()
    mavenLocal()
}

sonar {
    properties {
        property "sonar.projectKey", "hoangviet1vu_quarkus-template"
        property "sonar.organization", "prdcv-vu-hoang-viet"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "**/src/test/**"
        property "sonar.test.exclusions", "**/src/test/**"
    }
}

// Checkstyle configuration
checkstyle {
    toolVersion = '11.0.0'
    configFile = file("${rootDir}/src/main/resources/checkstyle/google_checks.xml")
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

// Configure Checkstyle tasks
tasks.withType(Checkstyle) {
    reports {
        xml.required = true
        html.required = true
        html.outputLocation = file("$buildDir/reports/checkstyle/main.html")
    }
}

checkstyleTest.enabled = false
check.dependsOn checkstyleMain

// Fix the Quarkus task dependencies
compileJava {
    dependsOn compileQuarkusGeneratedSourcesJava
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

// Also fix checkstyle to depend on Quarkus generated sources
checkstyleMain {
    exclude '**/quarkus-generated-sources/**'
    exclude '**/grpc/**'
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest'
    implementation("io.quarkus:quarkus-config-yaml")
    implementation('io.quarkus:quarkus-smallrye-health')

    // Hibernate ORM with Panache
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    // Database driver (choose one based on your database)
    implementation 'io.quarkus:quarkus-jdbc-postgresql'  // for PostgreSQL
    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    // JPAstreamer
    implementation 'com.speedment.jpastreamer:jpastreamer-core:3.0.4'
    annotationProcessor 'com.speedment.jpastreamer:fieldgenerator-standard:3.0.4'
    implementation 'io.quarkiverse.jpastreamer:quarkus-jpastreamer:3.0.3.Final'

    // Lombok dependencies
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'

}

group = 'vvu.centrauthz'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/generated/sources/annotationProcessor'
        }
    }
}